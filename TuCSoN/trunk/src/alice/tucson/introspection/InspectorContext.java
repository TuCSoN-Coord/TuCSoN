/*
 * TuCSoN coordination infrastructure - Copyright (C) 2001-2002 aliCE team at
 * deis.unibo.it This library is free software; you can redistribute it and/or
 * modify it under the terms of the GNU Lesser General Public License as
 * published by the Free Software Foundation; either version 2.1 of the License,
 * or (at your option) any later version. This library is distributed in the
 * hope that it will be useful, but WITHOUT ANY WARRANTY; without even the
 * implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See
 * the GNU Lesser General Public License for more details. You should have
 * received a copy of the GNU Lesser General Public License along with this
 * library; if not, write to the Free Software Foundation, Inc., 59 Temple
 * Place, Suite 330, Boston, MA 02111-1307 USA
 */
package alice.tucson.introspection;

import java.util.ArrayList;

import alice.tucson.api.TucsonTupleCentreId;
import alice.tuplecentre.api.Tuple;

/**
 * Defines the basic context for TuCSoN Inspector
 * 
 */
public interface InspectorContext {

    /** waits and processes TuCSoN virtual machine events */
    void acceptVMEvent() throws Exception;

    /** adds a new listener to the event generated by this context */
    void addInspectorContextListener(InspectorContextListener l);

    /** shutdown inspector */
    void exit() throws Exception;

    /** gets a snapshot of tuple set */
    void getSnapshot(byte snapshotType) throws Exception;

    TucsonTupleCentreId getTid();

    /** when doing trace, asks for a new virtual machine step */
    void nextStep() throws Exception;

    /** Removes a listener to Inspector Events */
    void removeInspectorContextListener(InspectorContextListener l);

    /** resets the tuple centre */
    void reset() throws Exception;

    /** sets the entire content of the event set */
    void setEventSet(ArrayList<? extends Tuple> tset) throws Exception;

    /** specifies the protocol used by the inspector */
    void setProtocol(InspectorProtocol p) throws Exception;

    /** sets the entire content of the tuple set */
    void setTupleSet(ArrayList<? extends Tuple> tset) throws Exception;

}
