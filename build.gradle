// Apply to All Projects
allprojects {

    // Plug-ins for all projects
    apply plugin: 'java'
    apply plugin: 'java-library'

    // In this section you declare where to find the dependencies of all projects
    repositories {
        jcenter()
        mavenCentral()
    }

    // Common Dependencies to all Projects
    dependencies {

        // Use JUnit test framework
        testRuntime 'org.junit.jupiter:junit-jupiter-engine:5.4.2'
        testImplementation('junit:junit:4.12')
        testImplementation('org.junit.jupiter:junit-jupiter-api:5.4.2')

    }

    sourceCompatibility = JavaVersion.VERSION_1_8
    targetCompatibility = JavaVersion.VERSION_1_8

}

// Dependencies for main project (actually only examples/tests)
dependencies {
    testImplementation project(":core")
    testImplementation project(":service")
    testImplementation project(":client")
}

subprojects{
    dependencies {
        // SLF4J
        implementation group: 'org.slf4j', name: 'slf4j-api', version: '1.7.9'
        implementation group: 'org.slf4j', name: 'slf4j-jdk14', version: '1.7.25'

    }
}


project(":service") {
    task runNode(type: JavaExec, dependsOn: classes) {
        group = "run"
        description = "Starts a new TucsonNode with defaults"

        classpath = sourceSets.main.runtimeClasspath
        main = "alice.tuplecentre.tucson.service.TucsonNodeService"
        
        if ("port" in rootProject.properties) {
            args = ["-portno", rootProject.properties["port"].toString()]
        }
    }
}

project(":cli") {
    task runCli(type: JavaExec, dependsOn: classes) {
        group = "run"
        description = "Starts a new Command Line Interface with defaults"

        standardInput = System.in
        classpath = sourceSets.main.runtimeClasspath
        main = "alice.tuplecentre.tucson.service.tools.CommandLineInterpreter"

        if ("port" in rootProject.properties) {
            args = ["-portno", rootProject.properties["port"].toString()]
        }
    }


}

project(":inspector") {
    task runInspector(type: JavaExec, dependsOn: classes) {
        group = "run"
        description = "Starts a new InspectorGUI"

        classpath = sourceSets.main.runtimeClasspath
        main = "alice.tuplecentre.tucson.introspection.tools.InspectorGUI"

        if ("port" in rootProject.properties) {
            args = ["-portno", rootProject.properties["port"].toString()]
        }
    }
}